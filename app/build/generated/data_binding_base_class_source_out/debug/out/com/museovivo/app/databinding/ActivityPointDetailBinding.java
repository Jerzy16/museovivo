// Generated by view binder compiler. Do not edit!
package com.museovivo.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.museovivo.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPointDetailBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FloatingActionButton btnAddComment;

  @NonNull
  public final MaterialButton btnNavigate;

  @NonNull
  public final MaterialButton btnShare;

  @NonNull
  public final TextView contact;

  @NonNull
  public final TextView entryFee;

  @NonNull
  public final EditText etComment;

  @NonNull
  public final FloatingActionButton fabBack;

  @NonNull
  public final TextView history;

  @NonNull
  public final ImageView ivPointImage;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final RecyclerView recyclerComments;

  @NonNull
  public final RecyclerView recyclerGallery;

  @NonNull
  public final TextView schedule;

  @NonNull
  public final TextView tvPointDescription;

  @NonNull
  public final TextView tvPointName;

  @NonNull
  public final TextView tvRatingValue;

  @NonNull
  public final FrameLayout variantContainer;

  private ActivityPointDetailBinding(@NonNull FrameLayout rootView,
      @NonNull FloatingActionButton btnAddComment, @NonNull MaterialButton btnNavigate,
      @NonNull MaterialButton btnShare, @NonNull TextView contact, @NonNull TextView entryFee,
      @NonNull EditText etComment, @NonNull FloatingActionButton fabBack, @NonNull TextView history,
      @NonNull ImageView ivPointImage, @NonNull RatingBar ratingBar,
      @NonNull RecyclerView recyclerComments, @NonNull RecyclerView recyclerGallery,
      @NonNull TextView schedule, @NonNull TextView tvPointDescription,
      @NonNull TextView tvPointName, @NonNull TextView tvRatingValue,
      @NonNull FrameLayout variantContainer) {
    this.rootView = rootView;
    this.btnAddComment = btnAddComment;
    this.btnNavigate = btnNavigate;
    this.btnShare = btnShare;
    this.contact = contact;
    this.entryFee = entryFee;
    this.etComment = etComment;
    this.fabBack = fabBack;
    this.history = history;
    this.ivPointImage = ivPointImage;
    this.ratingBar = ratingBar;
    this.recyclerComments = recyclerComments;
    this.recyclerGallery = recyclerGallery;
    this.schedule = schedule;
    this.tvPointDescription = tvPointDescription;
    this.tvPointName = tvPointName;
    this.tvRatingValue = tvRatingValue;
    this.variantContainer = variantContainer;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPointDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPointDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_point_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPointDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add_comment;
      FloatingActionButton btnAddComment = ViewBindings.findChildViewById(rootView, id);
      if (btnAddComment == null) {
        break missingId;
      }

      id = R.id.btn_navigate;
      MaterialButton btnNavigate = ViewBindings.findChildViewById(rootView, id);
      if (btnNavigate == null) {
        break missingId;
      }

      id = R.id.btn_share;
      MaterialButton btnShare = ViewBindings.findChildViewById(rootView, id);
      if (btnShare == null) {
        break missingId;
      }

      id = R.id.contact;
      TextView contact = ViewBindings.findChildViewById(rootView, id);
      if (contact == null) {
        break missingId;
      }

      id = R.id.entry_fee;
      TextView entryFee = ViewBindings.findChildViewById(rootView, id);
      if (entryFee == null) {
        break missingId;
      }

      id = R.id.et_comment;
      EditText etComment = ViewBindings.findChildViewById(rootView, id);
      if (etComment == null) {
        break missingId;
      }

      id = R.id.fab_back;
      FloatingActionButton fabBack = ViewBindings.findChildViewById(rootView, id);
      if (fabBack == null) {
        break missingId;
      }

      id = R.id.history;
      TextView history = ViewBindings.findChildViewById(rootView, id);
      if (history == null) {
        break missingId;
      }

      id = R.id.iv_point_image;
      ImageView ivPointImage = ViewBindings.findChildViewById(rootView, id);
      if (ivPointImage == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.recycler_comments;
      RecyclerView recyclerComments = ViewBindings.findChildViewById(rootView, id);
      if (recyclerComments == null) {
        break missingId;
      }

      id = R.id.recycler_gallery;
      RecyclerView recyclerGallery = ViewBindings.findChildViewById(rootView, id);
      if (recyclerGallery == null) {
        break missingId;
      }

      id = R.id.schedule;
      TextView schedule = ViewBindings.findChildViewById(rootView, id);
      if (schedule == null) {
        break missingId;
      }

      id = R.id.tv_point_description;
      TextView tvPointDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvPointDescription == null) {
        break missingId;
      }

      id = R.id.tv_point_name;
      TextView tvPointName = ViewBindings.findChildViewById(rootView, id);
      if (tvPointName == null) {
        break missingId;
      }

      id = R.id.tv_rating_value;
      TextView tvRatingValue = ViewBindings.findChildViewById(rootView, id);
      if (tvRatingValue == null) {
        break missingId;
      }

      id = R.id.variant_container;
      FrameLayout variantContainer = ViewBindings.findChildViewById(rootView, id);
      if (variantContainer == null) {
        break missingId;
      }

      return new ActivityPointDetailBinding((FrameLayout) rootView, btnAddComment, btnNavigate,
          btnShare, contact, entryFee, etComment, fabBack, history, ivPointImage, ratingBar,
          recyclerComments, recyclerGallery, schedule, tvPointDescription, tvPointName,
          tvRatingValue, variantContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
